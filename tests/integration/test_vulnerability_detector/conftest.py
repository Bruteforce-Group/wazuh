# Copyright (C) 2015-2023, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is free software; you can redistribute it and/or modify it under the terms of GPLv2
import pytest
from wazuh_testing.utils.db_interface import cve_db
from wazuh_testing.utils.services import control_service
from wazuh_testing.modules.vulnerability_detector.packages import insert_vulnerable_packages
from wazuh_testing.utils.db_interface.agent_db import update_sync_info, update_last_full_scan


@pytest.fixture()
def restart_modulesd():
    """Restart wazuh-modulesd daemon before starting a test, and stop it after finishing"""
    control_service('restart', daemon='wazuh-modulesd')
    yield
    control_service('stop', daemon='wazuh-modulesd')


@pytest.fixture()
def clean_cve_tables():
    """Clean all tables of the CVE database before and after finishing the test"""
    cve_db.clean_all_cve_tables()
    yield
    cve_db.clean_all_cve_tables()


@pytest.fixture(scope='module')
def clean_cve_tables_module():
    """Clean all tables of the CVE database before and after finishing the test"""
    cve_db.clean_all_cve_tables()
    yield
    cve_db.clean_all_cve_tables()

@pytest.fixture()
def prepare_baseline_scan_with_vuln_packages(mock_agent_with_custom_system):
    """Add a mocked agent with mocked packages and force the baseline scan for that agent.

    Args:
        mock_agent_with_custom_system (Fixture): Fixture for mocking an agent.
    """
    # Insert vulnerable packages
    insert_vulnerable_packages(agent_id=mock_agent_with_custom_system)

    # Force sync status for packages
    update_sync_info(agent_id=mock_agent_with_custom_system, component="syscollector-packages")

    # Force the baseline scan
    update_last_full_scan(0, agent_id=mock_agent_with_custom_system)

    yield mock_agent_with_custom_system
